import json
import re
from pprint import pprint

st = """{"content": "\u041f\u0440\u0438\u0432\u0435\u0442, Davron! \u0420\u0430\u0434 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0442\u043e\u0431\u043e\u0439. \u042f \u0437\u0430\u043c\u0435\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0441\u044c \u0441 \u043f\u043e\u0438\u0441\u043a\u043e\u043c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 \u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439. \u0420\u0430\u0441\u0441\u043a\u0430\u0436\u0438, \u0447\u0442\u043e \u0442\u0435\u0431\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442: \u0442\u0435\u0430\u0442\u0440\u044b, \u043a\u0438\u043d\u043e\u0442\u0435\u0430\u0442\u0440\u044b, \u0434\u043e\u0441\u0442\u043e\u043f\u0440\u0438\u043c\u0435\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438\u043b\u0438 \u0447\u0442\u043e-\u0442\u043e \u0435\u0449\u0435? \u0418 \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u0438\u0435-\u0442\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0436\u0430\u043d\u0440\u044b \u0444\u0438\u043b\u044c\u043c\u043e\u0432 \u0438\u043b\u0438 \u0432\u0438\u0434\u044b \u0441\u043f\u043e\u0440\u0442\u0430, \u0442\u043e \u043f\u043e\u0434\u0435\u043b\u0438\u0441\u044c \u0438\u043c\u0438 \u0441\u043e \u043c\u043d\u043e\u0439. \u0427\u0442\u043e\u0431\u044b \u043c\u043d\u0435 \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u0447\u0435 \u043d\u0430\u0439\u0442\u0438 \u0442\u043e, \u0447\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u043e\u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f! \ud83d\ude0a",
  "role": "assistant"
}"""
st = st.encode("utf-16", "surrogatepass").decode("utf-16")
d_data = json.loads(st.replace("'", '"'))

# st2 = "\ud83d\ude04".encode('utf-16','surrogatepass').decode('utf-16')
# print(st2)
import re

text = "–ö–æ–Ω–µ—á–Ω–æ, –≤–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —Å –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏: \n \
# \n\
# my_info_dict –≤—Ñ–∞–≤—Ñ–∞—Ñ–∞= –≤—Ñ–≤{'user_id': 400690372, 'user_name': 'ihmatullaev', 'user_firstname': 'Davron', 'user_surname': '', 'age': 0, 'sex': '', 'about_me': ['new user'], 'topics_history': ['–¢–≤–æ–∏ –ª—é–±–∏–º—ã–µ —Ñ–∏–ª—å–º—ã'], 'favorite_films': ['–¢–∏—Ç–∞–Ω–∏–∫'], 'favorite_books': [''], 'favorite_shows': [''], 'favorite_sports': [''], 'favorite_countries': [''], 'favorite_cities': [''], 'favorite_youtube_channels': [''], 'user_city': 'unknown', 'user_interests': [''], 'last_question': '–ü—Ä–∏–≤–µ—Ç, –î–∞–≤—Ä–æ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø–æ–≤–æ–¥—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞. –Ø –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å –æ —Ç–µ–±–µ –±–æ–ª—å—à–µ, –ø–æ—ç—Ç–æ–º—É –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—à–µ –∏–Ω—Ç–µ—Ä–≤—å—é. \n\n–ò—Ç–∞–∫, –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç–µ–º–µ. –Ø –≤–∏–∂—É, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã –≤ —Ñ–∏–ª—å–º–∞—Ö. –ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã –∏–ª–∏ —Ñ–∏–ª—å–º—ã —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å —Å–º–æ—Ç—Ä–µ—Ç—å? –ú–æ–∂–µ—Ç –±—ã—Ç—å, —É —Ç–µ–±—è –µ—Å—Ç—å –ª—é–±–∏–º—ã–µ –∞–∫—Ç–µ—Ä—ã –∏–ª–∏ –∞–∫—Ç—Ä–∏—Å—ã? –Ø –±—ã —Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Ç–≤–æ–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö –≤ –∫–∏–Ω–æ. –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –Ω–∞—Å–ª–∞–∂–¥–∞–µ—à—å—Å—è –≤ —Ñ–∏–ª—å–º–∞—Ö, —á—Ç–æ–±—ã —è –º–æ–≥ –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–ª–æ–≤–∞—Ä–µ.'}"
# pattern = re.compile(r"({[^}]*})", re.DOTALL)
# match = pattern.search(text)

# if match:
#     dictionary_text = match.group(1)
#     print(dictionary_text)

# data = "{'user_id': 400690372, 'user_name': 'ihmatullaev', 'user_firstname': 'Davron', 'user_surname': '', 'age': 0, 'sex': 'male', 'user_city': '', 'misc_data': {'about_me': ['new user', '–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–µ—Ö–Ω–æ.'], 'favorite_books': [''], 'favorite_films': [''], 'favorite_shows': [''], 'topics_history': [''], 'user_interests': ['–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Ç–µ—Ö–Ω–æ.'], 'favorite_cities': [''], 'favorite_sports': [''], 'favorite_countries': [''], 'favorite_youtube_channels': ['']}}"
# print(data[116:119])
# try:
#     json_data = json.loads(data.replace("'",'"'))
#     print(json_data)
# except json.JSONDecodeError as e:
#     print("Invalid JSON syntax:", e)


dict_sample = {
    "user_id": 1,
    "user_name": "Test",
    "user_firstname": "Test",
    "user_surname": "",
    "age": 0,
    "sex": "",
    "user_city": "",
    "last_question": "",
    "misc_data": {
        "about_me": ["new user"],
        "topics_history": [""],
        "favorite_films": [""],
        "favorite_books": [""],
        "favorite_shows": [""],
        "favorite_sports": [""],
        "favorite_countries": [""],
        "favorite_cities": [""],
        "favorite_youtube_channels": [""],
        "user_interests": [""],
    },
}

dict2 = {
    "user_id": 400690372,
    "user_name": "ihmatullaev",
    "user_firstname": "Davron",
    "user_surname": "",
    "age": 0,
    "sex": "",
    "user_city": "",
    "misc_data": {
        "about_me": ["new user"],
        "favorite_books": [""],
        "favorite_films": [""],
        "favorite_shows": [""],
        "topics_history": [""],
        "user_interests": [""],
        "favorite_cities": [""],
        "favorite_sports": [""],
        "favorite_countries": [""],
        "favorite_youtube_channels": [""],
    },
    "my_interests": "",
    "my_favorite_things": "",
    "interviewee_info": "–•–æ—á—É –≤ –∫–ª—É–±",
    "my_city": "",
    "favorite_sports": "",
    "favorite_countries": "",
    "favorite_cities": "",
    "user_interests": "",
    "topics_history": "",
    "about_me": "",
}
# dict1.update((k, dict2[k]) for k in set(dict2).intersection(dict1))
# pprint(dict1)

user_data = {
    "user_id": 400690372,
    "user_name": "ihmatullaev",
    "user_firstname": "Davron",
    "user_surname": "",
    "age": 30,
    "sex": "",
    "user_city": "",
    "misc_data": {
        "about_me": ["new user", "–º–Ω–µ 30"],
        "favorite_books": [""],
        "favorite_films": [""],
        "favorite_shows": [""],
        "topics_history": [""],
        "user_interests": [""],
        "favorite_cities": [""],
        "favorite_sports": [""],
        "favorite_countries": [""],
        "favorite_youtube_channels": [""],
    },
    "last_question": "–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é –∏ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! üòäüéâ\n\n–¢–∞–∫ –∫–∞–∫ —É —Ç–µ–±—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–º–∏–ª–∏—è, —è –±—ã —Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å, –∏–º–µ–µ—à—å –ª–∏ —Ç—ã –≤ –Ω–∞–ª–∏—á–∏–∏ —Ñ–∞–º–∏–ª–∏—é, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –º–æ–≥ –±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è? üßê\n\n–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –õ–æ–Ω–¥–æ–Ω–∞, —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –≥–æ—Ä–æ–¥! –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –õ–æ–Ω–¥–æ–Ω, —Ç–æ, –≤–æ–∑–º–æ–∂–Ω–æ, —É —Ç–µ–±—è –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –ª—é–±–∏–º—ã–µ –≥–æ—Ä–æ–¥–∞. –ú–æ–≥ –±—ã —Ç—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–º–∏ —Å–æ –º–Ω–æ–π? üåç\n\n–¢–∞–∫–∂–µ, –º–µ–Ω—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Ç–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —Ñ–∏–ª—å–º–∞—Ö –∏ —Å–µ—Ä–∏–∞–ª–∞—Ö. –ú–æ–∂–µ—à—å –ª–∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –æ —Ç–æ–º, –∫–∞–∫–∏–µ —Ñ–∏–ª—å–º—ã –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—ã —Ç–µ–±–µ –æ—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤—è—Ç—Å—è? üé•üì∫\n\n–ò, –∫–æ–Ω–µ—á–Ω–æ, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –∏–Ω—Ç–µ—Ä–µ—Å—ã, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å, –±—É–¥—É —Ä–∞–¥ —É—Å–ª—ã—à–∞—Ç—å –æ –Ω–∏—Ö! üé∂\n\n–ï—Å–ª–∏ –≤ –º–æ–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–º –≤–æ–ø—Ä–æ—Å–µ —è –Ω–µ –±—ã–ª –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω –∏–ª–∏ –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏ –º–Ω–µ! üòä\n\n–û–∂–∏–¥–∞—é —Ç–≤–æ–∏—Ö –æ—Ç–≤,\
–µ—Ç–æ–≤! üéâ,\
",
}
# col_val = [
#     f"{key} = {value}"
#     for key, value in user_data.items()
#     if value != None and value != "" and key != "user_id"
# ]
# print(f"\nColumn and values for update: {col_val}\n")
# # query = ", ".join(col_val)
# query = (
#     """update public.users set """ + ", ".join(col_val) + " where user_id=" + str(12)
# )
# print(query)

dict_sample = {
    "user_id": 1,
    "user_name": "Test",
    "user_firstname": "Test",
    "user_surname": "unknown",
    "age": 0,
    "sex": "unknown",
    "user_city": "unkown",
    "main_music_genres": {""},
    "techno_music_genres": {""},
    "favorite_techno_music_artists": {""},
    "favorite_night_clubs": {""},
    "favorite_bars": {""},
    "current_location_address": {""},
    "current_location_coordinates": (0, 0),
    "last_question": "unknown",
}
columns = "(" + ", ".join([key for key in dict_sample.keys()]) + ")"
values = ", ".join([str(value) for value in dict_sample.values()])
query = "INSERT INTO public.users " + columns + " VALUES " + values
# print(query)
test = """{'user_id': 400690372, 'user_name': 'ihmatullaev', 'user_firstname': 'Davron', 'user_surname': 'unknown', 'age': 0, 'sex': 'unknown', 'user_city': 'unknown', 'main_music_genres': [''], 'techno_music_genres': [''], 'favorite_techno_music_artists': [''], 'favorite_night_clubs': [''], 'favorite_bars': [''], 'current_location_address': [''], 'current_location_coordinates': '(0,0)'}"""
# print(test[325:339])
# print(test.replace("'", '"'))
# try:
#     json_data = json.loads(test.replace("'", '"'))
#     print(json_data)
# except json.JSONDecodeError as e:
#     print("Invalid JSON syntax:", e)
tags = [["Latin Hip-Hop"], ["Deep DnB"], ["Bleep"], ["Full-on"], ["Rave"], ["rock"]]
tags_kb = []
for i in range(0, len(tags), 2):
    row = [tags[i], tags[i + 1]]
    tags_kb.append(row)
print(tags_kb)
